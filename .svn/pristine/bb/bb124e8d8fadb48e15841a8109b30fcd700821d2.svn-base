//
//  SettingViewController.m
//  YOU WATCH－Auction
//
//  Created by 葛宾霞151 on 15/6/25.
//  Copyright (c) 2015年 葛宾霞151. All rights reserved.
//

#import "SettingViewController.h"
#import "AOColorFormat.h"
#import "AddressViewController.h"
#import "InformationViewController.h"
#import "ChangePasswordViewController.h"
#import "RefundViewController.h"
#import "AboutViewController.h"
#import "ZYControl.h"
#import "HomeViewController.h"
#import "AFNetworking.h"
#import "AffirmViewController.h"
#import "UserProtolViewController.h"
#import "EditViewController.h"
#import "AffirmModel.h"
#import "LogInViewController2.h"

@interface SettingViewController ()<UITableViewDelegate,UITableViewDataSource>
{
    NSArray *files;
    NSString *cachPath;
    float fileSize;
    NSNumber *flag;
    NSMutableArray *_dataArray;
}

@end

@implementation SettingViewController

-(id)init
{
    if (self = [super init]) {
        _dataArray = [[NSMutableArray alloc]init];
        self.tabBarItem.title = @"个人中心";
        self.tabBarItem.image = [UIImage imageNamed:@"个人设置.png"];
        self.view.backgroundColor = [UIColor whiteColor];
    }
    return self;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.title = @"个人中心";

    setTableView = [[UITableView alloc]initWithFrame:CGRectMake(0, 0, kScreenWidth, 100 * RATIOTYPE_HEIGHT * 8)];
    
    setTableView.delegate = self;
    setTableView.dataSource = self;
    
    [self.view addSubview:setTableView];
    
    UIButton *quitButton = [UIButton buttonWithType:UIButtonTypeCustom];
    quitButton.frame = CGRectMake((kScreenWidth - 690 * RATIOTYPE_WIDTH)/2 , setTableView.frame.size.height + 100 * RATIOTYPE_HEIGHT, 690 * RATIOTYPE_WIDTH, 100 * RATIOTYPE_HEIGHT);
    quitButton.backgroundColor = [AOColorFormat colorWithHexString:@"#c70065"];
    [quitButton setTitle:@"退出当前账号" forState:UIControlStateNormal];
    [quitButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    [quitButton addTarget:self action:@selector(quitAct:) forControlEvents:UIControlEventTouchUpInside];
    quitButton.titleLabel.textAlignment = NSTextAlignmentCenter;
    
    [self.view addSubview:quitButton];
    
}

-(void)quitAct:(UIButton *)button
{
    LogInViewController2 *loginVC = [[LogInViewController2 alloc]init];
    
    [self.navigationController presentViewController:loginVC animated:YES completion:^{
        
    }];
}

//退款账号数据
-(void)createReFundData
{
    AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];
    manager.responseSerializer = [AFJSONResponseSerializer serializer];
    NSString *url = @"http://123.57.212.63/paimai/index.php?con=Api&act=personalDefault";
    NSDictionary *parameters = @{@"client_id":@"1001",@"setid":@"2"};
    [manager POST:url parameters:parameters success:^(AFHTTPRequestOperation *operation, id responseObject) {
        
        flag =responseObject[@"data"];
        NSLog(@"%@",responseObject[@"data"]);

        if (flag == 0) {
            
            RefundViewController *refundVC = [[RefundViewController alloc]init];
            
            [self.navigationController pushViewController:refundVC animated:YES];
            
            self.tabBarController.tabBar.hidden = YES;
 
            
        }else{
            
            EditViewController *evc = [[EditViewController alloc]init];
            
            [self.navigationController pushViewController:evc animated:YES];
            
            self.tabBarController.tabBar.hidden = YES;
        }
        
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        NSLog(@"%@",error);
    }];
    
}
//直接跳转确认界面数据
-(void)createAffirmData
{
    AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];
    manager.responseSerializer = [AFJSONResponseSerializer serializer];
    NSString *url = @"http://123.57.212.63/paimai/index.php?con=api&act=accountlist";
    NSDictionary *parameters = @{@"client_id":@"1001"};
    [manager POST:url parameters:parameters success:^(AFHTTPRequestOperation *operation, id responseObject) {
        NSDictionary *dictData = responseObject[@"data"];
        NSArray *dictArray = [dictData objectForKey:@"brank"];
        for (NSDictionary *Dict in dictArray) {
            AffirmModel *model = [[AffirmModel alloc] init];
            model.brand_holder = [Dict objectForKey:@"brand_holder"];
            model.brand_cardnumber = [Dict objectForKey:@"brand_cardnumber"];
            model.brand_cardname = [Dict objectForKey:@"brand_cardname"];
            model.address = [Dict objectForKey:@"address"];
            model.add_time = [Dict objectForKey:@"add_time"];
            
            [_dataArray addObject:model];
            AffirmViewController *affVC = [[AffirmViewController alloc]init];
            for (AffirmModel *Afirmodel in _dataArray) {
                affVC.nameString = Afirmodel.brand_holder;
                NSLog(@"%@",affVC.nameString);
                affVC.cardNumString = Afirmodel.brand_cardnumber;
                affVC.openingBankString = Afirmodel.brand_cardname;
                affVC.locationString = Afirmodel.brand_provinces;
                
            }
            [self.navigationController pushViewController:affVC animated:YES];
            
            self.tabBarController.tabBar.hidden = YES;

        }
        NSLog(@"%@",_dataArray);
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        NSLog(@"%@",error);
    }];


}

#pragma mark - 缓存清理
-(void)clearCach
{
    fileSize = 0.00;
    cachPath = [NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES)objectAtIndex:0];
    
    files = [[NSFileManager defaultManager]subpathsAtPath:cachPath];//获取cach文件夹中所有文件的文件名
    
    for (NSString *str in files) {
        NSString *newPath = [cachPath stringByAppendingPathComponent:str];
        NSDictionary *dic = [[NSFileManager defaultManager]attributesOfItemAtPath:newPath error:nil];
        long long size = [dic [NSFileSize] longLongValue];
        
        fileSize += size;
    }
    
    fileSize = fileSize / 1024.00 /1024.00;
    
}

#pragma mark ---UITableViewDelegate

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 6;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 100 * RATIOTYPE_HEIGHT;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *setCellstr = @"settingCell";
    UITableViewCell *setCell = [tableView dequeueReusableCellWithIdentifier:setCellstr];
    
    if (!setCell) {
        setCell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:setCellstr];

    }
    
    [self clearCach];
    
    NSArray *cellName = @[@"选择收获地址",@"设置退款账户",@"消息提醒设置",@"清空缓存",@"用户协议",@"关于奢拍"];
    setCell.textLabel.text = cellName[indexPath.row];
    setCell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    setCell.textLabel.textColor = [AOColorFormat colorWithHexString:@"#4c4c4c"];
    setCell.textLabel.font = [UIFont systemFontOfSize:16];
    
    [setTableView setSeparatorInset:UIEdgeInsetsMake(0, 0, 0, 15)];
    
    
    if (indexPath.row == 3) {
        setCell.accessoryType = UITableViewCellAccessoryNone;
        setCell.detailTextLabel.text = [NSString stringWithFormat:@"(%ld个文件 共%.2fM)",(unsigned long)files.count,fileSize];
        setCell.detailTextLabel.textAlignment = NSTextAlignmentRight;
        setCell.detailTextLabel.textColor = [AOColorFormat colorWithHexString:@"#4c4c4c"];
        setCell.detailTextLabel.font = [UIFont systemFontOfSize:15];
    }
    
    return setCell;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];//取消TableCell的选中状态，记住
    
    switch (indexPath.row) {
        case 0:
        {
            AddressViewController *addressVC = [[AddressViewController alloc]init];
            addressVC.titleLabel = @"选择收货地址";
            addressVC.addBtnTitle = @"添加收货地址";
            
            [self.navigationController pushViewController:addressVC animated:YES];
            self.tabBarController.tabBar.hidden = YES;

        }
            
        break;
            
        case 1:
        {
            [self createReFundData];

        }
        break;
            
        case 2:
        {
            InformationViewController *informationVC = [[InformationViewController alloc]init];
            [self.navigationController pushViewController:informationVC animated:YES];
            self.tabBarController.tabBar.hidden = YES;

        }
            
        break;
//            
//        case 3:
//        {
//            ChangePasswordViewController *changeVC = [[ChangePasswordViewController alloc]init];
//            [self.navigationController pushViewController:changeVC animated:YES];
//            self.tabBarController.tabBar.hidden = YES;
//        }
            
        break;
            
        case 3:
        {

            
            if (files.count != 0) {
                dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT,0), ^{
                    for (NSString *p in files) {
                        NSError *error ;
                        NSString *path = [cachPath stringByAppendingPathComponent:p];
                        if ([[NSFileManager defaultManager]fileExistsAtPath:path])
                        {
                            [[NSFileManager defaultManager]removeItemAtPath:path error:&error];
                        }
                    }
                    [self performSelectorOnMainThread:@selector(clearCacheSuccess) withObject:nil waitUntilDone:YES];
                });
            }else
            {
                UIAlertView *alter = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"\n没有缓存文件，无需清理" delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil, nil];
                
                [alter show];
            }
            

        }
            
        break;
            
        case 4:
        {
            UserProtolViewController *upvc =[[UserProtolViewController alloc]init];
            [self.navigationController pushViewController:upvc animated:YES];
            self.tabBarController.tabBar.hidden = YES;
        }
        break;
            
        default:
        {
            AboutViewController *aboutVC = [[AboutViewController alloc]init];
            [self.navigationController pushViewController:aboutVC animated:YES];
            self.tabBarController.tabBar.hidden = YES;

        }
            
        break;
    }
    
    
}

- (void)clearCacheSuccess
{
    [setTableView reloadData];
    NSString *st = [NSString stringWithFormat:@"\n操作成功！共清理%.2fM缓存文件", fileSize];
    UIAlertView *al = [[UIAlertView alloc] initWithTitle:@"温馨提示" message:st delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil, nil];
    [al show];
}

-(void)viewWillAppear:(BOOL)animated
{
    self.tabBarController.tabBar.hidden = NO;
}



@end
